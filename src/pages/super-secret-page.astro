---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { groupPosts } from '../utils/groupPosts';

const posts = await getCollection('blog');
const { groupedPosts, sortedCategories } = groupPosts(posts, {
  includeDrafts: true,
  includeFuture: true
});

const getBadge = (post: any) => {
  if (post.data.draft) {
    return { text: 'Draft', class: 'bg-yellow-500/20 border border-yellow-500 text-yellow-200' };
  }
  if (new Date(post.data.publishDate) > new Date()) {
    return { text: 'Scheduled', class: 'bg-blue-500/20 border border-blue-500 text-blue-200' };
  }
  return null;
};
---

<Layout title="Super Secret Page - All Posts">
  <main class="max-w-3xl mx-auto px-4 py-8">
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-white mb-4">ðŸ¤« Super Secret Page</h1>
      <p class="text-gray-400">
        This page shows all posts, including drafts and scheduled posts.
      </p>
    </div>
    
    <div class="space-y-12">
      {sortedCategories.map(category => (
        groupedPosts[category] && groupedPosts[category].length > 0 && (
          <section>
            <h2 class="text-2xl font-bold text-white mb-6 capitalize">{category}</h2>
            <div class="space-y-6">
              {groupedPosts[category].map(post => {
                const badge = getBadge(post);
                return (
                  <article class="border border-gray-700 rounded-lg p-6 hover:border-gray-500 transition-colors">
                    <div class="flex items-start justify-between mb-2">
                      <a href={`/blog/${post.slug}`} class="block">
                        <h3 class="text-xl font-bold text-white">{post.data.title}</h3>
                      </a>
                      {badge && (
                        <span class={`px-2 py-1 text-xs font-medium rounded ${badge.class}`}>
                          {badge.text}
                        </span>
                      )}
                    </div>
                    <p class="text-gray-400 mb-4">{post.data.description}</p>
                    <div class="text-sm text-gray-500">
                      {post.data.draft ? 'Draft' : 
                        new Date(post.data.publishDate) > new Date() 
                          ? `Scheduled for ${post.data.publishDate}`
                          : `Published on ${post.data.publishDate}`
                      }
                      {post.data.version && ` â€¢ Version ${post.data.version}`}
                    </div>
                  </article>
                );
              })}
            </div>
          </section>
        )
      ))}
    </div>
  </main>
</Layout>