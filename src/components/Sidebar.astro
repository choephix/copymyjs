---
import type { CollectionEntry } from 'astro:content';

interface Props {
  groupedPosts: Record<string, CollectionEntry<'blog'>[]>;
  sortedCategories: string[];
  currentSlug?: string;
  headings: { depth: number; slug: string; text: string; }[];
}

const { groupedPosts, sortedCategories, currentSlug, headings } = Astro.props;
---

<aside class="w-64 h-screen sticky top-0 p-6 bg-gray-900 border-r border-gray-800 overflow-y-auto">
  <a href="/" class="block mb-8 text-xl font-bold text-white">
    Copy<span class="text-[#f7df1e]">My</span><span class="text-[#3178c6]">JS</span>
  </a>
  
  <nav>
    {sortedCategories.map(category => (
      groupedPosts[category] && groupedPosts[category].length > 0 && (
        <div class="mb-6">
          <h3 class="text-gray-500 uppercase text-xs font-semibold mb-3">{category}</h3>
          <ul class="space-y-6">
            {groupedPosts[category].map(post => (
              <li>
                <a 
                  href={`/blog/${post.slug}`}
                  class:list={[
                    'block text-sm hover:text-white transition-colors',
                    post.slug === currentSlug ? 'text-white font-medium' : 'text-gray-400'
                  ]}
                >
                  {post.data.title}
                </a>
                
                {post.slug === currentSlug && headings.length > 0 && (
                  <ul class="mt-2 ml-4 space-y-2">
                    {headings.filter(h => h.depth === 2).map(heading => (
                      <li>
                        <a 
                          href={`#${heading.slug}`}
                          class="block text-xs text-gray-500 hover:text-gray-300 transition-colors"
                        >
                          {heading.text}
                        </a>
                      </li>
                    ))}
                  </ul>
                )}
              </li>
            ))}
          </ul>
        </div>
      )
    ))}
  </nav>
</aside> 
