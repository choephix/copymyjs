---
description: 
globs: 
alwaysApply: false
---

# How to add a new snippet article

## Step-by-step

1. Write your snippet(s) to "src/snippets". These must be exported such that they can be used elsewhere in the codebase, but also well separated into different files (even if variations of the same snippet)

2. Write example usage of the snippet(s) in "src/examples". Each example file must be an exported function that takes a container HTMLElement as an argument, and adds necessary content to it. Use 
  ```ts
  //// Has .addHtml, .container and .logger.log()
  const builder = createExampleLayoutBuilder(container);
  ```

3. Add new page content to "src/content/posts/article-slug.mdx". You can combine:
  - regular markdown for the article text; 
  - `<CodeSnippet file="path-to-file" />` to directly print a code snippet file as-is. (path relative to src/snippets/, no extension)
  - `<Example component="path-to-example-file" namedExport="function-name" />` to embed a live example in the article. (path relative to src/snippets/, no extention)

## Notes:

- All filenames must be kebab-case
- Content front-matter for the .mdx:
  ```yaml
  ---
  title: "Appropriate user-readable title"
  description: "Appropriate, slighly catchy description"
  category: 'helpers/classic'
  publishDate: "yyyy-mm-dd" (current date)
  ---
  ```

## Examples

- @lipsum.mdx
- @cached-promise.mdx